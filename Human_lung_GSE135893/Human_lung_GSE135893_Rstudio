
library(Seurat)
library(dplyr)
library(ggplot2)
library(Matrix)
library(ade4)
library(scCustomize)
library(RColorBrewer)
library(viridis)

## Read matrix and create seurat object
sciadv_data <- Read10X(data.dir = "/Users/bkim6/Desktop/LAB/Seq/R/Human_lung_Sciadv/10X", gene.column = 1)
sciadv <- CreateSeuratObject(sciadv_data, project = "sciadv", min.features = 200)

##Process the data
sciadv <- PercentageFeatureSet(object = sciadv, pattern = "^MT-", col.name = "percent.mt")

VlnPlot(sciadv, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
smoothScatter(sciadv@meta.data$percent.mt, sciadv@meta.data$nFeature_RNA)
abline(h = 1000, v = 1.5)
text(1.5,700, "nFeature = 1000, percent.mt = 1.5", adj = c(0, -.1))

sciadv <- NormalizeData(sciadv, normalization.method = "LogNormalize", scale.factor = 10000)
sciadv <- NormalizeData(sciadv)
sciadv <- FindVariableFeatures(sciadv, selection.method = "vst", nfeatures = 2000)
sciadv <- ScaleData(sciadv)
sciadv <- RunPCA(sciadv)

sciadv <- JackStraw(sciadv, num.replicate = 100)
sciadv <- ScoreJackStraw(sciadv, dims = 1:20)

sciadv <- RunUMAP(object = sciadv, dims = 1:20, verbose = F)
sciadv <- FindNeighbors(object = sciadv, dims = 1:20, verbose = F)
sciadv <- FindClusters(object = sciadv, resolution = 0.1, verbose = F)

DimPlot(sciadv)
DimPlot(sciadv, label = TRUE)

## Epithelial (EPCAM+), Endothelial (PECAM1+), Immune (PTPRC+), Mesenchymal compartment (Triple negative)
FeaturePlot(sciadv, c("PTPRC", "EPCAM", "PECAM1"), cols = c("lightgray", "Red"))
DotPlot(sciadv, features = c("EPCAM", "PTPRC", "PECAM1"), cols = "RdYlBu")

saveRDS(sciadv, file = "sciadv.rds")

Idents(sciadv, cells = WhichCells(sciadv, idents = c(1, 4))) <- "Epithelial"
Idents(sciadv, cells = WhichCells(sciadv, idents = c(0, 2, 3, 8, 9))) <- "Immune"
Idents(sciadv, cells = WhichCells(sciadv, idents = c(5, 10))) <- "Endothelial"
Idents(sciadv, cells = WhichCells(sciadv, idents = c(6, 7))) <- "Mesenchymal"

sciadv@meta.data$population <- Idents(sciadv)

DimPlot(sciadv)

epi <- subset(sciadv, idents = "Epithelial")
saveRDS(epi, file = "sciadv_epi.rds")

immune <- subset(sciadv, idents = "Immune")
saveRDS(immune, file = "sciadv_immune.rds")

endo <- subset(sciadv, idents = "Endothelial")
saveRDS(endo, file = "sciadv_endo.rds")

mesen <- subset(sciadv, idents = "Mesenchymal")
saveRDS(mesen, file = "sciadv_mesen.rds")

##Epithelial cell processing
DimPlot(epi)

epi <- FindVariableFeatures(epi, selection.method = "epi", nfeatures = 3000)
all.genes <- rownames(epi)
epi <- ScaleData(epi, features = all.genes)
epi <- RunPCA(epi, features = VariableFeatures(object = epi))

epi <- JackStraw(epi, num.replicate = 100)
epi <- ScoreJackStraw(epi, dims = 1:20)

epi <- FindNeighbors(epi, dims = 1:20)
epi <- FindClusters(epi, resolution = 1)

epi <- RunUMAP(epi, dims = 1:11)

DimPlot(epi, label = TRUE)

## Annotation AT1 (AGER+/HOPX+), AT2(SFTPC+/ABCA3+), Transitional AT2(AGER_low/HOPX_low/SFTPC_low/ABCA3_low)
VlnPlot(epi, features = c("SFTPC", "ABCA3", "AGER", "HOPX"), pt.size = 0)
DotPlot(epi, features = c("SFTPC", "ABCA3", "AGER", "HOPX"))

Idents(epi, cells = WhichCells(epi, idents = c(10))) <- "AT1"
Idents(epi, cells = WhichCells(epi, idents = c(8, 9, 12, 13, 19, 26))) <- "AT2"
Idents(epi, cells = WhichCells(epi, idents = c(15, 7))) <- "Transitional AT2"

##MUC5B+(MUC5B+), SCGB3A2+(SCGB3A2+/SCGB1A1-), SCGB3A2+/SCGB1A1+(SCGB3A2+/SCGB1A1+)
DotPlot(epi, features = c("SCGB1A1", "SCGB3A2", "MUC5B", "MUC5AC"), cols = "RdYlBu")

Idents(epi, cells = WhichCells(epi, idents = c(3))) <- "MUC5B+"
Idents(epi, cells = WhichCells(epi, idents = c(5))) <- "SCGB3A2+"
Idents(epi, cells = WhichCells(epi, idents = c(18, 2))) <- "SCGB3A2+/SCGB1A1+"

##Basal(KRT5+/TP63+)
DotPlot(epi, features = c("KRT5", "TP63"), cols = "RdYlBu")

Idents(epi, cells = WhichCells(epi, idents = c(6, 30))) <- "Basal"

##Proliferating(MKI67+/TOP2A+)
DotPlot(epi, features = c("MKI67", "TOP2A"))

Idents(epi, cells = WhichCells(epi, idents = c(25))) <- "Proliferating"

##Ciliated(FOXJ1+/TMEM190+/CAPS+/HYDIN+), Differentiating Ciliated(FOXJ1+/SFTPB+)
DotPlot(epi, features = c("FOXJ1", "TMEM190", "CAPS", "HYDIN", "SFTPB"), cols = "RdYlBu")

Idents(epi, cells = WhichCells(epi, idents = c(0, 1, 4))) <- "Ciliated"
Idents(epi, cells = WhichCells(epi, idents = c(17, 14, 11, 21))) <- "Differentiating Ciliated"

DotPlot(epi, features = c("FOXJ1", "SFTPB"),  cols = "RdYlBu")

DimPlot(epi)

epi$celltype <- Idents(epi)


keep <- c("AT2","Differentiating Ciliated","Transitional AT2", "SCGB3A2+/SCGB1A1+", "AT1","MUC5B+","SCGB3A2+","Basal","Ciliated", "Proliferating")
epi2 <- subset(epi, idents = c("AT2","Differentiating Ciliated", "Transitional AT2", "SCGB3A2+/SCGB1A1+", "AT1","MUC5B+","SCGB3A2+","Basal","Ciliated","Proliferating"))


DimPlot(epi2)

saveRDS(epi2, file = "sciadv_epi.rds")
epi2 <- readRDS(file = "/Users/bkim6/Desktop/LAB/Seq/R/Human_lung_Sciadv/sciadv_epi.rds")

## Fig.1d
my_levels <- c("AT1", "Transitional AT2", "AT2", "SCGB3A2+/SCGB1A1+", "SCGB3A2+", 
               "Ciliated", "Differentiating Ciliated", "MUC5B+", "Proliferating", "Basal")

epi2@meta.data$celltype <- factor(x = epi2@meta.data$celltype, levels = my_levels)

Idents(epi2) <- "celltype"
DimPlot(epi2)

#Marker gene expression, Supplementary table 2
lung.markers <- FindAllMarkers(epi2, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)

saveRDS(lung.markers, file = "/Users/bkim6/Desktop/LAB/Seq/R/Human_lung_Sciadv/lung.markers.rds")

library(openxlsx)
write.xlsx(lung.markers, file = "lung_markers_sciadv_20220522.xlsx")

## Extended Data Fig. 2b, 2e, and 2f
lung.markers %>%
  group_by(cluster) %>%
  top_n(n = 10, wt = avg_log2FC) -> top10

DoHeatmap(
  epi2,
  features = top10$gene,
  size = 8,
  group.by = "celltype2",
  group.bar = TRUE,
  group.colors = NULL,
  draw.lines = TRUE) + scale_fill_gradientn(colors = c("blue", "white", "red"))

DotPlot(epi2, features = c("KIAA0101",
                           "MKI67",
                           "AGER",
                           "PDPN",
                           "SFTPC",
                           "ABCA3",
                           "SFTPCD",
                           "SCGB1A1",
                           "SCGB3A2",
                           "MGP",
                           "MUC5B",
                           "FOXJ1",
                           "TMEM190",
                           "KRT5",
                           "KRT17"),
        cols = "RdYlBu") +coord_flip() + theme(axis.text.x = element_text(angle = 45, hjust = 1) )

FeaturePlot(object = epi3, 
            features = c("KIAA0101",
                         "MKI67",
                         "AGER",
                         "SFTPC",
                         "SCGB1A1",
                         "SCGB3A2",
                         "MUC5B",
                         "FOXJ1",
                         "KRT5"),
            cols = c("lightgray", "Red"), pt.size = 0.2, repel = TRUE)


##PPC(PCLAF+), Extended Data Fig. 2e and 2f
DotPlot(epi2, features = c("KIAA0101", "MKI67", "TOP2A"), cols = "RdYlBu") +coord_flip() + theme(axis.text.x = element_text(angle = 45, hjust = 1) )

FeaturePlot(epi2, c("KIAA0101"), split.by = "Status", pt.size = 0.5, cols = c("lightgray", "Red"))

##DREAM target gene, Fig. 3b
epi2 <- AddModuleScore(object = epi2, features = gene_list_DREAM, name = "DREAM_score")

DotPlot(epi2, features = c("DREAM_score1"), cols = "RdYlBu")

##Disease type analysis



epi2@meta.data$disease <- epi2@meta.data$orig.ident

epi2@meta.data$disease <- plyr::mapvalues(x= epi2@meta.data$disease,
                                          from=c("F01385",
                                                 "F01386",
                                                 "ILD57"),
                                          to= c("Sarcoidosis",
                                                "Sarcoidosis",
                                                "Sarcoidosis"))

epi2@meta.data$disease <- plyr::mapvalues(x= epi2@meta.data$disease,
                                          from=c("F00202",
                                                 "ILD55",
                                                 "ILD62-1",
                                                 "ILD62-2"),
                                          to= c("NSIP",
                                                "NSIP",
                                                "NSIP",
                                                "NSIP"))


epi2@meta.data$disease <- plyr::mapvalues(x= epi2@meta.data$disease,
                                          from=c("F00431",
                                                 "F01172",
                                                 "F01173",
                                                 "F01214",
                                                 "F01302",
                                                 "F01303",
                                                 "F01379",
                                                 "F01380",
                                                 "F01390",
                                                 "F01391",
                                                 "F01392",
                                                 "ILD53",
                                                 "ILD59-1",
                                                 "ILD59-2",
                                                 "ILD60-1",
                                                 "ILD60-2",
                                                 "ILD61-1",
                                                 "ILD61-2",
                                                 "ILD63"),
                                          to= c("IPF",
                                                "IPF",
                                                "IPF",
                                                "IPF",
                                                "IPF",
                                                "IPF",
                                                "IPF",
                                                "IPF",
                                                "IPF",
                                                "IPF",
                                                "IPF",
                                                "IPF",
                                                "IPF",
                                                "IPF",
                                                "IPF",
                                                "IPF",
                                                "IPF",
                                                "IPF",
                                                "IPF"))

epi2@meta.data$disease <- plyr::mapvalues(x= epi2@meta.data$disease,
                                          from=c("F01375",
                                                 "F01376"),
                                          to= c("ILD",
                                                "ILD"))

epi2@meta.data$disease <- plyr::mapvalues(x= epi2@meta.data$disease,
                                          from=c("F00409",
                                                 "F01157",
                                                 "F01174",
                                                 "F01365",
                                                 "F01366",
                                                 "F01367",
                                                 "F01394",
                                                 "HD65",
                                                 "HD66",
                                                 "HD67",
                                                 "HD68",
                                                 "HD70"),
                                          to= c("Control",
                                                "Control",
                                                "Control",
                                                "Control",
                                                "Control",
                                                "Control",
                                                "Control",
                                                "Control",
                                                "Control",
                                                "Control",
                                                "Control",
                                                "Control"))

epi2@meta.data$disease <- plyr::mapvalues(x= epi2@meta.data$disease,
                                          from=c("F00207",
                                                 "F00208",
                                                 "ILD58"),
                                          to= c("cHP",
                                                "cHP",
                                                "cHP"))

## Fig. 4o and 4p
Idents(epi2) <- "celltype"

DimPlot(epi2, pt.size = 0.01)

my_levels <- c("Control", "IPF", "cHP", "NSIP", "ILD", "Sarcoidosis")
epi2@meta.data$disease <- factor(x = epi2@meta.data$disease, levels = my_levels)

Idents(epi2) <- "disease"
Idents(epi2) <- "celltype"

DimPlot(epi2, split.by = "disease", pt.size = 0.5)

epi2 <- AddModuleScore(object = epi2, features = gene_list_DREAM, name = "DREAM_score")

epi2 <- AddModuleScore(object = epi2, features = gene_list_tgf_hES, name = "tgf_hES_score")

sub <- subset(epi2, idents = c("Proliferating"))


VlnPlot(sub, features = c("DREAM_score1", "CLIC4", "tgf_hES_score1"), 
        ncol = 1, group.by = "disease")

##Mesenchymal analysis Fig.10 g-j
mesen <- readRDS(file = "sciadv_mesen.rds")

mesen <- FindVariableFeatures(mesen, selection.method = "mesen", nfeatures = 3000)
all.genes <- rownames(mesen)
mesen <- ScaleData(mesen, features = all.genes)
mesen <- RunPCA(mesen, features = VariableFeatures(object = mesen))

mesen <- JackStraw(mesen, num.replicate = 100)
mesen <- ScoreJackStraw(mesen, dims = 1:20)

mesen <- FindNeighbors(mesen, dims = 1:20)
mesen <- FindClusters(mesen, resolution = 0.5)

mesen <- RunUMAP(mesen, dims = 1:11)

DimPlot(mesen, label = TRUE)

##Sorting again of mesenchymal cell (PTPRC-/PECAM-/EPCAM-)

DotPlot(mesen, features = c("EPCAM", "PTPRC", "PECAM1"), cols = "RdYlBu")

mesen2 <- subset(mesen, idents = c("0", "1", "4", "5", "7", "8", "11", "12", "14"))
DimPlot(mesen2, label = TRUE)

##Process data
mesen2 <- FindVariableFeatures(mesen2, selection.method = "mesen2", nfeatures = 3000)
all.genes <- rownames(mesen2)
mesen2 <- ScaleData(mesen2, features = all.genes)
mesen2 <- RunPCA(mesen2, features = VariableFeatures(object = mesen2))

mesen2 <- JackStraw(mesen2, num.replicate = 100)
mesen2 <- ScoreJackStraw(mesen2, dims = 1:20)

mesen2 <- FindNeighbors(mesen2, dims = 1:20)
mesen2 <- FindClusters(mesen2, resolution = 0.1)

mesen2 <- RunUMAP(mesen2, dims = 1:11)
DimPlot(mesen2, label = TRUE)

##annotation Fibroblast (FN1+/COL1A1+)
VlnPlot(mesen2, features = c("FN1", "COL1A1", "COL3A1"), pt.size = 0)

#Smooth Muscle Cells (ACTA2+/MYH11+)
DotPlot(mesen2, features = c("ACTA2", "MYH11"), cols = "RdYlBu")

#Mesothelial cells(MSLN+/UPK3B+)
DotPlot(mesen2, features = c("MSLN", "UPK3B"), cols = "RdYlBu")

Idents(mesen2, cells = WhichCells(mesen2, idents = c(1, 4))) <- "Smooth muscle cell"
Idents(mesen2, cells = WhichCells(mesen2, idents = c(5))) <- "Mesothelial"
Idents(mesen2, cells = WhichCells(mesen2, idents = c(0, 6, 2))) <- "Fibroblast"

mesen2$celltype <- Idents(mesen2)

mesen3 <- subset(mesen2, idents = c("Smooth muscle cell", "Mesothelial", "Fibroblast"))

Idents(mesen3) <- "celltype"

##Extended Data Fig. 10f, 10g, 10h, and 10i
DimPlot(mesen3, pt.size = 1)

DimPlot(mesen3, split.by = "disease", pt.size = 1)

table(mesen3@meta.data$disease)

#NSIP         cHP     Control         IPF         ILD Sarcoidosis 
#1228         967         908        4163         109         294 

FeaturePlot(mesen3, c("ACTA2", "MYH11", "MSLN", "UPK3B", "FN1", "COL1A1"), 
            pt.size = 0.4, 
            cols = c("lightgray", "Red"))

mesen3 <- AddModuleScore(object = mesen3, features = gene_list_tgf_A549, name = "Smad3_score_A549")
mesen3 <- AddModuleScore(object = mesen3, features = gene_list_tgf_hES, name = "Smad3_score_hES")
mesen3 <- AddModuleScore(object = mesen3, features = gene_list_tgf_mES, name = "Smad3_score_mES")

mesen4 <- subset(mesen3, idents = c("Fibroblast"))

DimPlot(mesen4, split.by = "disease")

my_levels <- c("Control", "IPF", "cHP", "NSIP", "ILD", "Sarcoidosis")
mesen4@meta.data$disease <- factor(x = mesen4@meta.data$disease, levels = my_levels)
Idents(mesen4) <- "disease"

DotPlot(mesen4, features = c("Smad3_score_A5491", "Smad3_score_mES1", "Smad3_score_hES1"), cols = "RdYlBu")

